{"version":3,"file":"lib_index_js.7bbe78f6c690da1782ae.js","mappings":";;;;;;;;;;;;;;;;;;;AAA+D;AAC0B;AAC1C;AAC/C;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,wGAAwG;AACxG;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,YAAY,6EAA2B,gFAAgF;AACvH,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mCAAmC;AACnC;AACA,wBAAwB,mBAAmB;AAC3C,YAAY,6EAA2B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,mBAAmB,yDAAO,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAc,EAAE,kEAAgB;AAC/C,eAAe,yEAAgB;AAC/B;AACA;AACA,iEAAe,MAAM,EAAC","sources":["webpack://solutions/./lib/index.js"],"sourcesContent":["import { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { INotebookTools, INotebookTracker, NotebookActions } from '@jupyterlab/notebook';\nimport { TagTool } from '@jupyterlab/celltags';\nfunction create_remove_exercise(notebook, tracker, metadata) {\n    var _a, _b, _c;\n    var lcells = notebook.selectedCells; // Cell<ICellModel>[]\n    if (lcells.length < 1) {\n        alert('Solution extension:  \\nPlease select some cells...');\n        return;\n    }\n    if (((_a = tracker.currentWidget) === null || _a === void 0 ? void 0 : _a.content) === undefined) { // Need to ensure a notebook is opened\n        alert('Solution extension:  \\nPlease open a notebook...');\n        return;\n    }\n    if (metadata.checkApplied('first')) { // If removing the first of an exercise, remove entire exercise\n        //remove_element(cell)\n        metadata.removeTag('first');\n        // metadata.removeTag('hidden');\n        do {\n            metadata.removeTag('hidden');\n            NotebookActions.selectBelow((_b = tracker.currentWidget) === null || _b === void 0 ? void 0 : _b.content); // select the next cell and check to see if it is part of the same exercise\n        } while (notebook.activeCell !== null && metadata.checkApplied('hidden') && !metadata.checkApplied('first'));\n        // NotebookActions.selectBelow(tracker.currentWidget?.content);\n        // while (notebook.activeCell !== null && metadata.checkApplied('hidden') && !metadata.checkApplied('first')) {\n        //   metadata.removeTag('hidden');\n        //   NotebookActions.selectBelow(tracker.currentWidget?.content);\n        // }\n        console.log('Removed Exercise');\n    }\n    else {\n        metadata.addTag('first'); // Indicates the first cell of an exercise\n        metadata.addTag('hidden'); // Indicates a hidden (exercise) cell\n        //add_element(cell)\n        for (var i = 1; i < lcells.length; i++) {\n            NotebookActions.selectBelow((_c = tracker.currentWidget) === null || _c === void 0 ? void 0 : _c.content);\n            metadata.addTag('hidden');\n        }\n        console.log('Added Exercise');\n    }\n}\nfunction init(app, notebook, tracker, settingRegistry) {\n    console.log('JupyterLab extension solutions is activated!!');\n    if (settingRegistry) {\n        settingRegistry\n            .load(plugin.id)\n            .then(settings => {\n            console.log('solutions settings loaded:', settings.composite);\n        })\n            .catch(reason => {\n            console.error('Failed to load settings for solutions.', reason);\n        });\n    }\n    var tool = new TagTool(tracker, app); // metadata tool\n    app.commands.addCommand(\"solutions:debug-log\", {\n        label: \"Debug Log\",\n        execute: () => {\n            create_remove_exercise(notebook, tracker, tool);\n        }\n    });\n    app.commands.addKeyBinding({\n        command: 'solutions:debug-log',\n        args: {},\n        keys: ['\\\\', '\\\\'],\n        selector: '.jp-Notebook'\n    });\n}\n;\n/**\n * Initialization data for the solutions extension.\n */\nconst plugin = {\n    id: 'solutions:plugin',\n    autoStart: true,\n    requires: [INotebookTools, INotebookTracker],\n    optional: [ISettingRegistry],\n    activate: init\n};\nexport default plugin;\n"],"names":[],"sourceRoot":""}