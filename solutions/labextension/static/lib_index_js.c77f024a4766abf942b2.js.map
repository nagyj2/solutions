{"version":3,"file":"lib_index_js.c77f024a4766abf942b2.js","mappings":";;;;;;;;;;;;;;;AAA+D;AAC/D;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yEAAgB;AAC/B;AACA;AACA,iEAAe,MAAM,EAAC","sources":["webpack://solutions/./lib/index.js"],"sourcesContent":["import { ISettingRegistry } from '@jupyterlab/settingregistry';\nfunction create_remove_exercise(notebook) {\n    var lcells = notebook.selectedCells; // Cell<ICellModel>[]\n    if (lcells.length < 1) {\n        alert('Solution extension:  \\nPlease select some cells...');\n        return;\n    }\n    var cell = lcells[0];\n    console.log(cell);\n}\nfunction init(app, settingRegistry, notebook) {\n    console.log('JupyterLab extension solutions is activated!!');\n    if (settingRegistry) {\n        settingRegistry\n            .load(plugin.id)\n            .then(settings => {\n            console.log('solutions settings loaded:', settings.composite);\n        })\n            .catch(reason => {\n            console.error('Failed to load settings for solutions.', reason);\n        });\n    }\n    app.commands.addCommand('solutions:debug-print', {\n        label: 'Debug print',\n        execute: args => {\n            create_remove_exercise(notebook);\n        }\n    });\n}\n;\n/**\n * Initialization data for the solutions extension.\n */\nconst plugin = {\n    id: 'solutions:plugin',\n    autoStart: true,\n    optional: [ISettingRegistry],\n    activate: init\n};\nexport default plugin;\n"],"names":[],"sourceRoot":""}